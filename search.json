[{"path":"https://jtlandis.github.io/plyxp/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 plyxp authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"quick-start","dir":"Articles","previous_headings":"","what":"Quick start","title":"plyxp Usage Guide","text":"plyxp provides efficient abstractions SummarizedExperiment using common dplyr functions feels natural operating data.frame tibble. plyxp uses data-masking rlang package order connect dplyr functions SummarizedExperiment slots manner aims intuitive avoiding ambiguity outcomes.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"supported-data-types-and-operations","dir":"Articles","previous_headings":"Quick start","what":"Supported data types and operations","title":"plyxp Usage Guide","text":"plyxp works SummarizedExperiment objects, well classes derived , including DESeqDataSet, SingleCellExperiment, etc. supports following operations: mutate select summarize pull filter arrange","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"typical-use-case","dir":"Articles","previous_headings":"Quick start","what":"Typical use case","title":"plyxp Usage Guide","text":"operations can span contexts, necessary data extracted context computation: Calling .cols assay context produces object matching size orientation assay data. Alternatively used purrr compute row means: See details objects made available across contexts. plyxp also enables common grouping summarization routines:","code":"library(airway) data(airway) library(dplyr) ## Error in get(paste0(generic, \".\", class), envir = get_method_env()) :  ##   object 'type_sum.accel' not found library(plyxp) # to use plyxp, call `new_plyxp()` on your SummarizedExperiment object airway <- new_plyxp(airway) # add data (mutate) to any of the three tables, # assay, colData, rowData, # ...using contextual helpers cols() and rows() airway |>   mutate(log_counts = log1p(counts),          cols(treated = dex == \"trt\"),          rows(new_id = paste0(\"gene-\", gene_name))) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features      .samples | counts log_counts | gene_id gene_name gene_biotype ##     <chr>          <chr>    |  <int>      <dbl> | <chr>   <chr>     <chr>        ##   1 ENSG000000000… SRR1039… |    679       6.52 | ENSG00… TSPAN6    protein_cod… ##   2 ENSG000000000… SRR1039… |      0       0    | ENSG00… TNMD      protein_cod… ##   3 ENSG000000004… SRR1039… |    467       6.15 | ENSG00… DPM1      protein_cod… ##   4 ENSG000000004… SRR1039… |    260       5.56 | ENSG00… SCYL3     protein_cod… ##   5 ENSG000000004… SRR1039… |     60       4.11 | ENSG00… C1orf112  protein_cod… ##   …        …           …           …         …       …        …           …      ## n-4 ENSG000002734… SRR1039… |      0       0    | ENSG00… RP11-180… antisense    ## n-3 ENSG000002734… SRR1039… |      0       0    | ENSG00… TSEN34    protein_cod… ## n-2 ENSG000002734… SRR1039… |      0       0    | ENSG00… RP11-138… lincRNA      ## n-1 ENSG000002734… SRR1039… |      0       0    | ENSG00… AP000230… lincRNA      ## n   ENSG000002734… SRR1039… |      0       0    | ENSG00… RP11-80H… lincRNA      ## # ℹ n = 509,416 ## # ℹ 7 more variables: new_id <chr>, `` <>, SampleName <fct>, cell <fct>, ## #   dex <fct>, albut <fct>, treated <lgl> # suppose a variable, `sizeFactor`, in the colData airway$sizeFactor <- runif(8, .9, 1.1)  # we wish to scale the counts in the matrix using the size factor, # then compute row means over the scaled counts matrix: airway |>   mutate(scaled_counts = counts / .cols$sizeFactor, #          rows(ave_scl_cts = rowMeans(.assays_asis$scaled_counts))) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features   .samples | counts scaled_counts | gene_id gene_name gene_biotype ##     <chr>       <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        ##   1 ENSG000000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… ##   2 ENSG000000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… ##   3 ENSG000000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… ##   4 ENSG000000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… ##   5 ENSG000000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… ##   …      …          …           …            …       …        …           …      ## n-4 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    ## n-3 ENSG000002… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… ## n-2 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      ## n-1 ENSG000002… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      ## n   ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      ## # ℹ n = 509,416 ## # ℹ 7 more variables: ave_scl_cts <dbl>, `` <>, SampleName <fct>, cell <fct>, ## #   dex <fct>, albut <fct>, sizeFactor <dbl> airway |>   mutate(scaled_counts = counts / .cols$sizeFactor,          # You may expect a list when accessing other contexts          # from either the rows() or cols() contexts.          rows(ave_scl_cts = purrr::map_dbl(.assays$scaled_counts, mean))) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features   .samples | counts scaled_counts | gene_id gene_name gene_biotype ##     <chr>       <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        ##   1 ENSG000000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… ##   2 ENSG000000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… ##   3 ENSG000000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… ##   4 ENSG000000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… ##   5 ENSG000000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… ##   …      …          …           …            …       …        …           …      ## n-4 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    ## n-3 ENSG000002… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… ## n-2 ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      ## n-1 ENSG000002… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      ## n   ENSG000002… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      ## # ℹ n = 509,416 ## # ℹ 7 more variables: ave_scl_cts <dbl>, `` <>, SampleName <fct>, cell <fct>, ## #   dex <fct>, albut <fct>, sizeFactor <dbl> summary <- airway |>   group_by(rows(gene_biotype)) |>   summarize(col_sums = colSums(counts),             # may rename rows with .features             rows(.features = unique(gene_biotype))) # summarize returns a SummarizedExperiment here, # retaining rowData and colData  summary |> rowData() ## DataFrame with 30 rows and 1 column ##                                    gene_biotype ##                                     <character> ## protein_coding                   protein_coding ## pseudogene                           pseudogene ## processed_transcript       processed_transcript ## antisense                             antisense ## lincRNA                                 lincRNA ## ...                                         ... ## IG_C_pseudogene                 IG_C_pseudogene ## TR_D_gene                             TR_D_gene ## IG_J_pseudogene                 IG_J_pseudogene ## 3prime_overlapping_ncrna 3prime_overlapping_n.. ## processed_pseudogene       processed_pseudogene # visualizing the output as a tibble: library(tibble) summary |>   pull(col_sums) |>   as_tibble(rownames = \"type\") ## # A tibble: 30 × 9 ##    type        SRR1039508 SRR1039509 SRR1039512 SRR1039513 SRR1039516 SRR1039517 ##    <chr>            <dbl>      <dbl>      <dbl>      <dbl>      <dbl>      <dbl> ##  1 protein_co…   19413626      45654          4       1188      96378          0 ##  2 pseudogene    17741060      45864          4        462      38656          0 ##  3 processed_…   23926011     133335          0       1049      64884          0 ##  4 antisense     14360299     120060          4       1113      36267          0 ##  5 lincRNA       23003444     206075       6038        626      81606          0 ##  6 polymorphi…   29233398     125015       5618        803      88868          0 ##  7 IG_V_pseud…   18114369     145078       7662        316      44385          0 ##  8 IG_V_gene     20103401     170641       5579        256      92499          0 ##  9 sense_over…     807285     147563       7869        339        491          0 ## 10 sense_intr…     733916     149486       9443        202        502          0 ## # ℹ 20 more rows ## # ℹ 2 more variables: SRR1039520 <dbl>, SRR1039521 <dbl>"},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"related-work","dir":"Articles","previous_headings":"Quick start","what":"Related work","title":"plyxp Usage Guide","text":"note plyxp highly related tidyomics projects including: tidySummarizedExperiment plyranges DFplyr . focused design principles function endomorphism (returning object input), avoiding ambiguity strictly defined behavior (potentially expense longer code), allowing user convenience multiple expressions result, may improve computational performance.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"a-note-on-tidysummarizedexperiment","dir":"Articles","previous_headings":"Quick start > Related work","what":"A Note on tidySummarizedExperiment","title":"plyxp Usage Guide","text":"plyxp tidySummarizedExperiment provide dplyr-style interfaces SummarizedExperiment objects, can easily loaded used R session without functions conflicting. casting objects new_plyxp constructor, users can enable plyxp-driven functionality. plan also use plyxp functions cases speed improve efficiency functions implemented tidySummarizedExperiment.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"manipulating-summarizedexperiment-with-plyxp","dir":"Articles","previous_headings":"","what":"Manipulating SummarizedExperiment with plyxp","title":"plyxp Usage Guide","text":"SummarizedExperiment object contains three main components/“contexts” mask, assays(), rowData()1 colData(). plyxp provides variables -data within current contexts enabling call S4 methods S4 objects dplyr verbs. require access variables outside context, may use pronouns made available plyxp specify find variables. .assays, .rows .cols pronouns outputs depends evaluating context. Users expect underlying data returned .rows .cols pronouns assays context vector, replicated match size assay context.  Alternatively, using pronoun either rows() cols() contexts return list equal length either nrows(rowData()) nrows(colData()) respectively.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"assay-context","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with plyxp","what":"assay context","title":"plyxp Usage Guide","text":"Default evaluation context within rowData context: .assays$foo alias lapply(seq_len(nrow()), \\(, x) x[,,drop=FALSE], x = foo) within colData context: .assays$foo alias lapply(seq_len(ncol()), \\(, x) x[,,drop=FALSE], x = foo) .assays_asis →\\pronoun direct bindings assays() assay_ctx(expr, asis = FALSE) →\\short hand bind assay context front current context.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"rows-context","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with plyxp","what":"rows context","title":"plyxp Usage Guide","text":"rows(...) →\\sentinel function call indicate evaluation context. within assay context: .rows$foo alias vctrs::vec_rep(foo, times = ncol()) within colData context: .rows$foo alias vctrs::vec_rep(list(foo), times = n()) .rows_asis →\\pronoun direct bindings rowData() row_ctx(expr, asis = FALSE) →\\shorthand bind rowData context front current context","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"cols-context","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with plyxp","what":"cols context","title":"plyxp Usage Guide","text":"cols(...) →\\sentinel function call indicate evaluation context. within assay context: .cols$foo alias vctrs::vec_rep_each(foo, times = nrow()) within rowData context: .rows$foo alias vctrs::vec_rep(list(foo), times = n()) .cols_asis →\\pronoun direct bindings colData() col_ctx(expr, asis = FALSE) →\\shorthand bind colData context front current context","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"multiple-expressions-enabled-via-plyxp","dir":"Articles","previous_headings":"Manipulating SummarizedExperiment with plyxp","what":"Multiple expressions enabled via plyxp","title":"plyxp Usage Guide","text":"can compare two ways dividing vector colData along columns assay data:","code":"# here the `.cols$` pronoun reshapes the data to fit the `assays` context airway |>   mutate(scaled_counts = counts / .cols$sizeFactor) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features .samples | counts scaled_counts | gene_id gene_name gene_biotype | ##     <chr>     <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        | ##   1 ENSG0000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… | ##   2 ENSG0000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… | ##   3 ENSG0000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… | ##   4 ENSG0000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… | ##   5 ENSG0000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… | ##   …     …         …           …            …       …        …           …        ## n-4 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    | ## n-3 ENSG0000… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… | ## n-2 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      | ## n-1 ENSG0000… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      | ## n   ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      | ## # ℹ n = 509,416 ## # ℹ 5 more variables: SampleName <fct>, cell <fct>, dex <fct>, albut <fct>, ## #   sizeFactor <dbl> # this is equivalent to the following, where we have to transpose # the `counts` assay data twice to enable the correct recycling # of the size factor vector airway |>   mutate(scaled_counts = t(t(counts) / .cols_asis$sizeFactor)) ## # A RangedSummarizedExperiment-tibble Abstraction: 63,677 × 8 ##     .features .samples | counts scaled_counts | gene_id gene_name gene_biotype | ##     <chr>     <chr>    |  <int>         <dbl> | <chr>   <chr>     <chr>        | ##   1 ENSG0000… SRR1039… |    679         741.  | ENSG00… TSPAN6    protein_cod… | ##   2 ENSG0000… SRR1039… |      0           0   | ENSG00… TNMD      protein_cod… | ##   3 ENSG0000… SRR1039… |    467         510.  | ENSG00… DPM1      protein_cod… | ##   4 ENSG0000… SRR1039… |    260         284.  | ENSG00… SCYL3     protein_cod… | ##   5 ENSG0000… SRR1039… |     60          65.5 | ENSG00… C1orf112  protein_cod… | ##   …     …         …           …            …       …        …           …        ## n-4 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-180… antisense    | ## n-3 ENSG0000… SRR1039… |      0           0   | ENSG00… TSEN34    protein_cod… | ## n-2 ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-138… lincRNA      | ## n-1 ENSG0000… SRR1039… |      0           0   | ENSG00… AP000230… lincRNA      | ## n   ENSG0000… SRR1039… |      0           0   | ENSG00… RP11-80H… lincRNA      | ## # ℹ n = 509,416 ## # ℹ 5 more variables: SampleName <fct>, cell <fct>, dex <fct>, albut <fct>, ## #   sizeFactor <dbl>"},{"path":[]},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"object-integrity","dir":"Articles","previous_headings":"Advanced features","what":"Object integrity","title":"plyxp Usage Guide","text":"plyxp provides opinionated framework dplyr verbs interact SummarizedExperiment objects. general, plyxp allow operations guarantee valid return object. reason arrange(), filter() group_by() allow operations default assay context, likely break assumed structure SummarizedExperiment object.","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"group_by","dir":"Articles","previous_headings":"Advanced features","what":"group_by()","title":"plyxp Usage Guide","text":"plyxp also supports group_by operations allowing users query information dplyr::n() dplyr::cur_group_id(). However due linked structure SummarizedExperiment object plyxp providing multiple evaluation contexts, grouping operations complex return values potentionally ambiguous. reason groupings contextual. assay context dependently linked groupings rows cols contexts , grouping rows ignored viewed cols context similarly grouping cols ignored viewed rows context. way, chosen make groupings rows cols independent . figure attempts show groupings conditionally dropped scope evaluation. motivate choice, suppose drop grouping values. Assume small 5 4 SummarizedExperiment object. rowData() colData() grouped 2 groups rowData() colData() totaling 4 groups across assays. syntax implies wish move data colData() rowData(). previously established conventions, expect output alias vctrs::vec_rep(list(condition), times = n()). Additionally rows() sentinal expect output .cols$condition need match size evaluation context. Unfortunately, becomes extremely difficult resolve current conventions. Without dropping cols() groupings, rows() grouping evaluated equal number groups cols(). first glance, may seem desirable, problem arises considering theses outputs across groups stored per group rows(). example, output .cols$condition return list equal number groups column context? yes, need consider size stability output context! Assuming rowData() least one group three elements, guarentee fit (also makes poor assumption elements rowData() somehow correspond groups colData()). Thus left wrapping results list replicating appropriate size. said done, list lists, difficult reason , potentionally unexpected painful work . reason groupings present rowData() context groupings rowData(), similarly colData() context.","code":"group_by(se_simple, rows(direction), cols(condition)) |>   mutate(rows(data_from_cols = .cols$condition))"},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"printing","dir":"Articles","previous_headings":"Advanced features","what":"Printing","title":"plyxp Usage Guide","text":"Motivated show/print function tidySummarizedExperiment, visualize data tabular. plyxp offers option opt-behavior setting associated global option: Alternatively, may use helper functions use_show_tidy() use_show_default() enable disable alternative printing respectively. Since plyxp aims leave input data -possible, considered providing support printing S4Vectors within tibble(). clear, plyxp allow put S4Vectors inside tibble(), allow S4Vectors printed pillar(), formatting engine behind tibble() pretty printing. enable behavior, data reported user, proxy S4Vector custom vctrs_vctr object plyxp::vec_phantom(). truth, vec_phantom object simple integer vector “phantomData” attribute. allows us carry along S4Vector pillar()’s printing pipeline time print column. pillar_shaft() method vec_phantom format S4 data plyxp_pillar_format() generic, default calls S4Vectors::showAsCell(). Users free create methods S4 vectors differ S4Vectors::showAsCell() like, seen ?`plyxp-printing`","code":"options(\"show_SummarizedExperiment_as_tibble_abstraction\" = TRUE)"},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"renaming-rows-or-columns","dir":"Articles","previous_headings":"Advanced features","what":"renaming rows or columns","title":"plyxp Usage Guide","text":"Inspired tidySummarizedExperiment, plyxp provides access rownames colnames SummarizedExperiment object installing .features .samples rowData() colData() contexts respectively. special assigning value .features rowData() context .samples colData() context create new column, changes rownames colnames resulting object.","code":"se_simple ## # A SummarizedExperiment-tibble Abstraction: 5 × 4 ##     .features .samples | counts logcounts | gene  length direction | sample ##     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  ##   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     ##   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     ##   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     ##   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     ##   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     ##   …   …         …             …        …     …         … …            …     ## n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     ## n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     ## n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     ## n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     ## n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     ## # ℹ n = 20 ## # ℹ 1 more variable: condition <chr> # moving data to rownames and colnames se_simple |>   mutate(     orig_names = sprintf(       \"%s-%s\",       # .features is installed in the rows() context       .rows$.features,       # .samples is installed in the cols() context       .cols$.samples),     rows(.features = gene,          # deleting rowData column          gene = NULL),     cols(.samples = sample,          # deleting colData column          sample = NULL)   ) ## # A SummarizedExperiment-tibble Abstraction: 5 × 4 ##     .features .samples | counts logcounts orig_names  | length direction | ##     <chr>     <chr>    |  <int>     <dbl> <chr>       |  <int> <chr>     | ##   1 g1        s1       |     14      2.64 row_1-col_1 |      1 -         | ##   2 g2        s1       |     19      2.94 row_2-col_1 |     24 +         | ##   3 g3        s1       |     16      2.77 row_3-col_1 |     60 +         | ##   4 g4        s1       |     11      2.40 row_4-col_1 |     39 -         | ##   5 g5        s1       |     18      2.89 row_5-col_1 |     37 +         | ##   …  …         …              …        …       …             … …           ## n-4 g1        s4       |      9      2.20 row_1-col_4 |      1 -         | ## n-3 g2        s4       |      4      1.39 row_2-col_4 |     24 +         | ## n-2 g3        s4       |     20      3.00 row_3-col_4 |     60 +         | ## n-1 g4        s4       |      3      1.10 row_4-col_4 |     39 -         | ## n   g5        s4       |      5      1.61 row_5-col_4 |     37 +         | ## # ℹ n = 20 ## # ℹ 1 more variable: condition <chr>"},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"troubleshooting-and-best-practices","dir":"Articles","previous_headings":"","what":"Troubleshooting and best practices","title":"plyxp Usage Guide","text":"plyxp takes inspiration data masks used dplyr, unfortunately complex. means overhead creating evaluation mask per dplyr verb. Try reduce number dplyr verb calls instead increase content verb. example instead : following","code":".data |>   mutate(foo = bar) |>   mutate(baz = foo^2) .data |>   mutate(     foo = bar,     baz = foo^2   )"},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"community-and-support","dir":"Articles","previous_headings":"","what":"Community and support","title":"plyxp Usage Guide","text":"Please feel free post questions plyxp : Bioconductor support site Issue GitHub #tidiness_in_bioc channel community-bioc Slack code contributions: small fixes, feel free post PR GitHub larger structural changes package code, please reach development team first one channels. Thanks interest plyxp!","code":""},{"path":"https://jtlandis.github.io/plyxp/articles/plyxp.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"plyxp Usage Guide","text":"","code":"devtools::session_info() ## ─ Session info ─────────────────────────────────────────────────────────────── ##  setting  value ##  version  R version 4.4.1 (2024-06-14) ##  os       Ubuntu 22.04.4 LTS ##  system   x86_64, linux-gnu ##  ui       X11 ##  language en ##  collate  en_US.UTF-8 ##  ctype    en_US.UTF-8 ##  tz       UTC ##  date     2025-01-06 ##  pandoc   3.2 @ /usr/bin/ (via rmarkdown) ##  ## ─ Packages ─────────────────────────────────────────────────────────────────── ##  package              * version    date (UTC) lib source ##  abind                  1.4-8      2024-09-12 [1] RSPM (R 4.4.0) ##  airway               * 1.24.0     2024-05-02 [1] Bioconductor 3.19 (R 4.4.1) ##  Biobase              * 2.64.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  BiocGenerics         * 0.50.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  bslib                  0.8.0      2024-07-29 [2] RSPM (R 4.4.0) ##  cachem                 1.1.0      2024-05-16 [2] RSPM (R 4.4.0) ##  cli                    3.6.3      2024-06-21 [2] RSPM (R 4.4.0) ##  crayon                 1.5.3      2024-06-20 [2] RSPM (R 4.4.0) ##  DelayedArray           0.30.1     2024-05-07 [1] Bioconductor 3.19 (R 4.4.1) ##  desc                   1.4.3      2023-12-10 [2] RSPM (R 4.4.0) ##  devtools               2.4.5      2022-10-11 [2] RSPM (R 4.4.0) ##  digest                 0.6.37     2024-08-19 [2] RSPM (R 4.4.0) ##  dplyr                * 1.1.4      2023-11-17 [1] RSPM (R 4.4.0) ##  ellipsis               0.3.2      2021-04-29 [2] RSPM (R 4.4.0) ##  evaluate               1.0.1      2024-10-10 [2] RSPM (R 4.4.0) ##  fastmap                1.2.0      2024-05-15 [2] RSPM (R 4.4.0) ##  fs                     1.6.5      2024-10-30 [2] RSPM (R 4.4.0) ##  generics               0.1.3      2022-07-05 [1] RSPM (R 4.4.0) ##  GenomeInfoDb         * 1.40.1     2024-05-24 [1] Bioconductor 3.19 (R 4.4.1) ##  GenomeInfoDbData       1.2.12     2024-10-27 [1] Bioconductor ##  GenomicRanges        * 1.56.2     2024-10-09 [1] Bioconductor 3.19 (R 4.4.1) ##  glue                   1.8.0      2024-09-30 [2] RSPM (R 4.4.0) ##  htmltools              0.5.8.1    2024-04-04 [2] RSPM (R 4.4.0) ##  htmlwidgets            1.6.4      2023-12-06 [2] RSPM (R 4.4.0) ##  httpuv                 1.6.15     2024-03-26 [2] RSPM (R 4.4.0) ##  httr                   1.4.7      2023-08-15 [2] RSPM (R 4.4.0) ##  IRanges              * 2.38.1     2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) ##  jquerylib              0.1.4      2021-04-26 [2] RSPM (R 4.4.0) ##  jsonlite               1.8.9      2024-09-20 [2] RSPM (R 4.4.0) ##  knitr                  1.49       2024-11-08 [2] RSPM (R 4.4.0) ##  later                  1.4.1      2024-11-27 [2] RSPM (R 4.4.0) ##  lattice                0.22-6     2024-03-20 [3] CRAN (R 4.4.1) ##  lifecycle              1.0.4      2023-11-07 [2] RSPM (R 4.4.0) ##  magrittr               2.0.3      2022-03-30 [2] RSPM (R 4.4.0) ##  Matrix                 1.7-1      2024-10-18 [3] RSPM (R 4.4.0) ##  MatrixGenerics       * 1.16.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  matrixStats          * 1.4.1      2024-09-08 [1] RSPM (R 4.4.0) ##  memoise                2.0.1      2021-11-26 [2] RSPM (R 4.4.0) ##  mime                   0.12       2021-09-28 [2] RSPM (R 4.4.0) ##  miniUI                 0.1.1.1    2018-05-18 [2] RSPM (R 4.4.0) ##  pillar                 1.10.0     2024-12-17 [2] RSPM (R 4.4.0) ##  pkgbuild               1.4.5      2024-10-28 [2] RSPM (R 4.4.0) ##  pkgconfig              2.0.3      2019-09-22 [2] RSPM (R 4.4.0) ##  pkgdown                2.1.1      2024-09-17 [2] RSPM (R 4.4.0) ##  pkgload                1.4.0      2024-06-28 [2] RSPM (R 4.4.0) ##  plyxp                * 1.1.1      2025-01-06 [1] Bioconductor ##  profvis                0.4.0      2024-09-20 [2] RSPM (R 4.4.0) ##  promises               1.3.2      2024-11-28 [2] RSPM (R 4.4.0) ##  purrr                  1.0.2      2023-08-10 [2] RSPM (R 4.4.0) ##  R6                     2.5.1      2021-08-19 [2] RSPM (R 4.4.0) ##  ragg                   1.3.3      2024-09-11 [2] RSPM (R 4.4.0) ##  Rcpp                   1.0.13-1   2024-11-02 [2] RSPM (R 4.4.0) ##  remotes                2.5.0.9000 2025-01-04 [1] Github (r-lib/remotes@828ba53) ##  rlang                  1.1.4      2024-06-04 [2] RSPM (R 4.4.0) ##  rmarkdown              2.29       2024-11-04 [2] RSPM (R 4.4.0) ##  S4Arrays               1.4.1      2024-05-20 [1] Bioconductor 3.19 (R 4.4.1) ##  S4Vectors            * 0.42.1     2024-07-03 [1] Bioconductor 3.19 (R 4.4.1) ##  S7                     0.2.0      2024-11-07 [1] RSPM (R 4.4.0) ##  sass                   0.4.9      2024-03-15 [2] RSPM (R 4.4.0) ##  sessioninfo            1.2.2      2021-12-06 [2] RSPM (R 4.4.0) ##  shiny                  1.10.0     2024-12-14 [2] RSPM (R 4.4.0) ##  SparseArray            1.4.8      2024-05-24 [1] Bioconductor 3.19 (R 4.4.1) ##  SummarizedExperiment * 1.34.0     2024-05-01 [1] Bioconductor 3.19 (R 4.4.1) ##  systemfonts            1.1.0      2024-05-15 [2] RSPM (R 4.4.0) ##  textshaping            0.4.1      2024-12-06 [2] RSPM (R 4.4.0) ##  tibble               * 3.2.1      2023-03-20 [2] RSPM (R 4.4.0) ##  tidyr                  1.3.1      2024-01-24 [1] RSPM (R 4.4.0) ##  tidyselect             1.2.1      2024-03-11 [1] RSPM (R 4.4.0) ##  UCSC.utils             1.0.0      2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  urlchecker             1.0.1      2021-11-30 [2] RSPM (R 4.4.0) ##  usethis                3.1.0      2024-11-26 [2] RSPM (R 4.4.0) ##  utf8                   1.2.4      2023-10-22 [2] RSPM (R 4.4.0) ##  vctrs                  0.6.5      2023-12-01 [2] RSPM (R 4.4.0) ##  withr                  3.0.2      2024-10-28 [2] RSPM (R 4.4.0) ##  xfun                   0.49       2024-10-31 [2] RSPM (R 4.4.0) ##  xtable                 1.8-4      2019-04-21 [2] RSPM (R 4.4.0) ##  XVector                0.44.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  yaml                   2.3.10     2024-07-26 [2] RSPM (R 4.4.0) ##  zlibbioc               1.50.0     2024-04-30 [1] Bioconductor 3.19 (R 4.4.1) ##  ##  [1] /__w/_temp/Library ##  [2] /usr/local/lib/R/site-library ##  [3] /usr/local/lib/R/library ##  ## ──────────────────────────────────────────────────────────────────────────────"},{"path":[]},{"path":"https://jtlandis.github.io/plyxp/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Justin Landis. Author, maintainer. Michael Love. Author.","code":""},{"path":"https://jtlandis.github.io/plyxp/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Landis J, Love M (2025). plyxp: Data masks SummarizedExperiment enabling dplyr-like manipulation. R package version 1.1.1, https://jtlandis.github.io/plyxp, https://github.com/jtlandis/plyxp.","code":"@Manual{,   title = {plyxp: Data masks for SummarizedExperiment enabling dplyr-like manipulation},   author = {Justin Landis and Michael Love},   year = {2025},   note = {R package version 1.1.1, https://jtlandis.github.io/plyxp},   url = {https://github.com/jtlandis/plyxp}, }"},{"path":"https://jtlandis.github.io/plyxp/index.html","id":"plyxp","dir":"","previous_headings":"","what":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"plyxp provides efficient abstractions SummarizedExperiment using common dplyr functions feels natural operating data.frame tibble. plyxp makes use concise grammar exploring manipulating annotated matrix data form SummarizedExperiment, scaling simple complex operations spanning one tables data. also aim optimized implementations plyxp power functionality within tidySummarizedExperiment package, also offers dplyr-like interface SummarizedExperiment. two packages can easily used parallel, casting objects new_plyxp constructor enable plyxp-driven functionality. plyxp uses data-masking rlang package order connect dplyr functions SummarizedExperiment slots manner aims intuitive avoiding ambiguity outcomes. Note: package still active development. Feel free reach package developers, see Feedback section .","code":""},{"path":"https://jtlandis.github.io/plyxp/index.html","id":"installing-plyxp","dir":"","previous_headings":"","what":"installing plyxp","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"","code":"# plyxp is available on BiocManager version 3.20 BiocManager::install(\"plyxp\")"},{"path":"https://jtlandis.github.io/plyxp/index.html","id":"data-masking-summarizedexperiment","dir":"","previous_headings":"","what":"data masking SummarizedExperiment","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"SummarizedExperiment object contains three main components/“contexts” mask, assays(), rowData()1 colData(). plyxp provides variables -data within current contexts enabling call S4 methods S4 objects dplyr verbs. require access variables outside context, may use pronouns made available plyxp specify find variables.  .assays, .rows .cols pronouns outputs depends evaluating context. Users expect underlying data returned .rows .cols pronouns assays context vector, replicated match size assay context. Alternatively, using pronoun either rows() cols() contexts likely return list equal length either nrows(rowData()) nrows(colData()) respectively.","code":""},{"path":"https://jtlandis.github.io/plyxp/index.html","id":"feedback","dir":"","previous_headings":"","what":"Feedback","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"love hear feedback. Please post Bioconductor support site #tidiness_in_bioc Slack channel community-bioc software usage help, post Issue GitHub, software development questions.","code":""},{"path":"https://jtlandis.github.io/plyxp/index.html","id":"funding","dir":"","previous_headings":"","what":"Funding","title":"Data masks for SummarizedExperiment enabling dplyr-like manipulation","text":"plyxp supported EOSS cycle 6 grant Wellcome Trust.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/PlySummarizedExperiment-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"PlySummarizedExperiment Methods — se","title":"PlySummarizedExperiment Methods — se","text":"Methods SummarizedExperiment package re-implemented PlySummarizedExperiment.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/PlySummarizedExperiment-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PlySummarizedExperiment Methods — se","text":"","code":"se(x)  # S4 method for class 'PlySummarizedExperiment' se(x)  se(x) <- value  # S4 method for class 'PlySummarizedExperiment' se(x) <- value  # S4 method for class 'PlySummarizedExperiment' assays(x, withDimnames = TRUE, ...)  # S4 method for class 'PlySummarizedExperiment,list' assays(x, withDimnames = TRUE, ...) <- value  # S4 method for class 'PlySummarizedExperiment,SimpleList' assays(x, withDimnames = TRUE, ...) <- value  # S4 method for class 'PlySummarizedExperiment,missing' assay(x, i, withDimnames = TRUE, ...)  # S4 method for class 'PlySummarizedExperiment,numeric' assay(x, i, withDimnames = TRUE, ...)  # S4 method for class 'PlySummarizedExperiment,character' assay(x, i, withDimnames = TRUE, ...)  # S4 method for class 'PlySummarizedExperiment,missing' assay(x, i, withDimnames = TRUE, ...) <- value  # S4 method for class 'PlySummarizedExperiment,numeric' assay(x, i, withDimnames = TRUE, ...) <- value  # S4 method for class 'PlySummarizedExperiment,character' assay(x, i, withDimnames = TRUE, ...) <- value  # S4 method for class 'PlySummarizedExperiment' rowData(x, use.names = TRUE, ...)  # S4 method for class 'PlySummarizedExperiment' rowData(x, ...) <- value  # S4 method for class 'PlySummarizedExperiment' colData(x, ...)  # S4 method for class 'PlySummarizedExperiment,DataFrame' colData(x, ...) <- value  # S4 method for class 'PlySummarizedExperiment,NULL' colData(x, ...) <- value"},{"path":"https://jtlandis.github.io/plyxp/reference/PlySummarizedExperiment-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PlySummarizedExperiment Methods — se","text":"x PlySummarizedExperiment object value replacement value withDimnames logical ... additional arguments character numeric index use.names logical","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/PlySummarizedExperiment-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PlySummarizedExperiment Methods — se","text":"Replacement functions return PlySummarizedExperiment object. functions return object method SummarizedExperiment.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/PlySummarizedExperiment-methods.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"PlySummarizedExperiment Methods — se","text":"se(PlySummarizedExperiment): get se slot PlySummarizedExperiment object se(x) <- value: set se slot PlySummarizedExperiment object se(PlySummarizedExperiment) <- value: set se slot PlySummarizedExperiment object assays(PlySummarizedExperiment): get assays o PlySummarizedExperiment object assays(x = PlySummarizedExperiment) <- value: set assays PlySummarizedExperiment object assays(x = PlySummarizedExperiment) <- value: set assays PlySummarizedExperiment object assay(x = PlySummarizedExperiment, = missing): get first assay PlySummarizedExperiment object assay(x = PlySummarizedExperiment, = numeric): get assay PlySummarizedExperiment object assay(x = PlySummarizedExperiment, = character): get assay PlySummarizedExperiment object assay(x = PlySummarizedExperiment, = missing) <- value: set assay PlySummarizedExperiment object assay(x = PlySummarizedExperiment, = numeric) <- value: set assay PlySummarizedExperiment object assay(x = PlySummarizedExperiment, = character) <- value: set assay PlySummarizedExperiment object rowData(PlySummarizedExperiment): get rowData PlySummarizedExperiment object rowData(PlySummarizedExperiment) <- value: set rowData PlySummarizedExperiment object colData(PlySummarizedExperiment): get colData PlySummarizedExperiment object colData(x = PlySummarizedExperiment) <- value: set colData PlySummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/PlySummarizedExperiment-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PlySummarizedExperiment Methods — se","text":"","code":"assays(se_simple) #> List of length 2 #> names(2): counts logcounts rowData(se_simple) #> DataFrame with 5 rows and 3 columns #>              gene    length   direction #>       <character> <integer> <character> #> row_1          g1         1           - #> row_2          g2        24           + #> row_3          g3        60           + #> row_4          g4        39           - #> row_5          g5        37           + colData(se_simple) #> DataFrame with 4 rows and 2 columns #>            sample   condition #>       <character> <character> #> col_1          s1       cntrl #> col_2          s2       cntrl #> col_3          s3        drug #> col_4          s4        drug"},{"path":"https://jtlandis.github.io/plyxp/reference/arrange.html","id":null,"dir":"Reference","previous_headings":"","what":"arrange rows or columns of PlySummarizedExperiment — arrange","title":"arrange rows or columns of PlySummarizedExperiment — arrange","text":"arrange() orders either rows columns PlySummarizedExperiment object. Note, guarentee valid PlySummarizedExperiment returned, arranging assays evaluation context disabled. Unlike dplyr verbs, arrange() largely ignores grouping. PlySummarizedExperiment method also provides functionality via .by_group argument.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/arrange.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"arrange rows or columns of PlySummarizedExperiment — arrange","text":"","code":"# S3 method for class 'PlySummarizedExperiment' arrange(.data, ..., .by_group = FALSE)"},{"path":"https://jtlandis.github.io/plyxp/reference/arrange.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"arrange rows or columns of PlySummarizedExperiment — arrange","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects ... <data-masking> Variables, functions variables. Use desc() sort variable descending order. .by_group TRUE, sort first grouping variable. Applies grouped data frames .","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/arrange.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"arrange rows or columns of PlySummarizedExperiment — arrange","text":"object inheriting PlySummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/arrange.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"arrange rows or columns of PlySummarizedExperiment — arrange","text":"","code":"# arrange within rows/cols contexts separately arrange(   se_simple,   rows(direction),   cols(dplyr::desc(condition)) ) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_2     col_3    |      1     0     | g2        24 +         | s3     #>   2 row_3     col_3    |     15     2.71  | g3        60 +         | s3     #>   3 row_5     col_3    |     12     2.48  | g5        37 +         | s3     #>   4 row_1     col_3    |      7     1.95  | g1         1 -         | s3     #>   5 row_4     col_3    |     10     2.30  | g4        39 -         | s3     #>   …   …         …             …       …      …         … …            …     #> n-4 row_2     col_2    |      2     0.693 | g2        24 +         | s2     #> n-3 row_3     col_2    |      6     1.79  | g3        60 +         | s2     #> n-2 row_5     col_2    |     13     2.56  | g5        37 +         | s2     #> n-1 row_1     col_2    |      8     2.08  | g1         1 -         | s2     #> n   row_4     col_2    |     17     2.83  | g4        39 -         | s2     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>  # access assay data to compute arrangement arrange(   se_simple,   rows(rowSums(.assays_asis$counts)),   cols(colSums(.assays_asis$counts)) ) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #>   2 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #>   3 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #>   4 row_5     col_4    |      5      1.61 | g5        37 +         | s4     #>   5 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #>   …   …         …             …        …     …         … …            …     #> n-4 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #> n-3 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #> n-2 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #> n-1 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #> n   row_3     col_1    |     16      2.77 | g3        60 +         | s1     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>  # assay context is disabled arrange(se_simple, counts) |> try() #> Error in arrange(se_simple, counts) :  #> Caused by error in `arrange_se_impl()`: #> ! Cannot arrange in `assays` context #> ✖ review expression: ..1 #> ℹ consider wrapping expressions in rows(...) or cols(...)  # convert to `data.frame` first as.data.frame(se_simple) |>   arrange(counts) #>    .features .samples counts logcounts gene length direction sample condition #> 1      row_2    col_3      1 0.0000000   g2     24         +     s3      drug #> 2      row_2    col_2      2 0.6931472   g2     24         +     s2     cntrl #> 3      row_4    col_4      3 1.0986123   g4     39         -     s4      drug #> 4      row_2    col_4      4 1.3862944   g2     24         +     s4      drug #> 5      row_5    col_4      5 1.6094379   g5     37         +     s4      drug #> 6      row_3    col_2      6 1.7917595   g3     60         +     s2     cntrl #> 7      row_1    col_3      7 1.9459101   g1      1         -     s3      drug #> 8      row_1    col_2      8 2.0794415   g1      1         -     s2     cntrl #> 9      row_1    col_4      9 2.1972246   g1      1         -     s4      drug #> 10     row_4    col_3     10 2.3025851   g4     39         -     s3      drug #> 11     row_4    col_1     11 2.3978953   g4     39         -     s1     cntrl #> 12     row_5    col_3     12 2.4849066   g5     37         +     s3      drug #> 13     row_5    col_2     13 2.5649494   g5     37         +     s2     cntrl #> 14     row_1    col_1     14 2.6390573   g1      1         -     s1     cntrl #> 15     row_3    col_3     15 2.7080502   g3     60         +     s3      drug #> 16     row_3    col_1     16 2.7725887   g3     60         +     s1     cntrl #> 17     row_4    col_2     17 2.8332133   g4     39         -     s2     cntrl #> 18     row_5    col_1     18 2.8903718   g5     37         +     s1     cntrl #> 19     row_2    col_1     19 2.9444390   g2     24         +     s1     cntrl #> 20     row_3    col_4     20 2.9957323   g3     60         +     s4      drug"},{"path":"https://jtlandis.github.io/plyxp/reference/as.data.frame.html","id":null,"dir":"Reference","previous_headings":"","what":"create data.frame — as.data.frame","title":"create data.frame — as.data.frame","text":"create data.frame","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/as.data.frame.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"create data.frame — as.data.frame","text":"","code":"# S3 method for class 'PlySummarizedExperiment' as.data.frame(x, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/as.data.frame.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"create data.frame — as.data.frame","text":"x SummarizedExperiment object ... unused arguments","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/as.data.frame.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"create data.frame — as.data.frame","text":"data.frame object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/as.data.frame.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"create data.frame — as.data.frame","text":"","code":"as.data.frame(se_simple) #>    .features .samples counts logcounts gene length direction sample condition #> 1      row_1    col_1     14 2.6390573   g1      1         -     s1     cntrl #> 2      row_2    col_1     19 2.9444390   g2     24         +     s1     cntrl #> 3      row_3    col_1     16 2.7725887   g3     60         +     s1     cntrl #> 4      row_4    col_1     11 2.3978953   g4     39         -     s1     cntrl #> 5      row_5    col_1     18 2.8903718   g5     37         +     s1     cntrl #> 6      row_1    col_2      8 2.0794415   g1      1         -     s2     cntrl #> 7      row_2    col_2      2 0.6931472   g2     24         +     s2     cntrl #> 8      row_3    col_2      6 1.7917595   g3     60         +     s2     cntrl #> 9      row_4    col_2     17 2.8332133   g4     39         -     s2     cntrl #> 10     row_5    col_2     13 2.5649494   g5     37         +     s2     cntrl #> 11     row_1    col_3      7 1.9459101   g1      1         -     s3      drug #> 12     row_2    col_3      1 0.0000000   g2     24         +     s3      drug #> 13     row_3    col_3     15 2.7080502   g3     60         +     s3      drug #> 14     row_4    col_3     10 2.3025851   g4     39         -     s3      drug #> 15     row_5    col_3     12 2.4849066   g5     37         +     s3      drug #> 16     row_1    col_4      9 2.1972246   g1      1         -     s4      drug #> 17     row_2    col_4      4 1.3862944   g2     24         +     s4      drug #> 18     row_3    col_4     20 2.9957323   g3     60         +     s4      drug #> 19     row_4    col_4      3 1.0986123   g4     39         -     s4      drug #> 20     row_5    col_4      5 1.6094379   g5     37         +     s4      drug"},{"path":"https://jtlandis.github.io/plyxp/reference/dot-pronouns.html","id":null,"dir":"Reference","previous_headings":"","what":"contextual plyxp pronouns — dot-pronouns","title":"contextual plyxp pronouns — dot-pronouns","text":"plyxp utilizes version rlang::.data pronouns. may used gain access evaluation contexts managed set data-masks. Similar rlang::.data, plyxp::.assays exported pronouns exported pass R CMD Checks. using plyxp within package, import associated pronoun plyxp use fully unqualified name, .assays, .assays_asis, etc.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/dot-pronouns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"contextual plyxp pronouns — dot-pronouns","text":"","code":".assays  .assays_asis  .rows  .rows_asis  .cols  .cols_asis"},{"path":"https://jtlandis.github.io/plyxp/reference/dot-pronouns.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"contextual plyxp pronouns — dot-pronouns","text":"object class NULL length 0. object class NULL length 0. object class NULL length 0. object class NULL length 0. object class NULL length 0. object class NULL length 0.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/dot-pronouns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"contextual plyxp pronouns — dot-pronouns","text":"access specific values behind rlang pronoun","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/dot-pronouns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"contextual plyxp pronouns — dot-pronouns","text":"","code":"mutate(se_simple,        # access via pronoun        rows(sum = rowSums(.assays_asis$counts)),        cols(sum = vapply(.assays$counts, sum, numeric(1)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction   sum | #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     <dbl> | #>   1 row_1     col_1    |     14      2.64 | g1         1 -            38 | #>   2 row_2     col_1    |     19      2.94 | g2        24 +            26 | #>   3 row_3     col_1    |     16      2.77 | g3        60 +            57 | #>   4 row_4     col_1    |     11      2.40 | g4        39 -            41 | #>   5 row_5     col_1    |     18      2.89 | g5        37 +            48 | #>   …   …         …             …        …     …         … …             …   #> n-4 row_1     col_4    |      9      2.20 | g1         1 -            38 | #> n-3 row_2     col_4    |      4      1.39 | g2        24 +            26 | #> n-2 row_3     col_4    |     20      3.00 | g3        60 +            57 | #> n-1 row_4     col_4    |      3      1.10 | g4        39 -            41 | #> n   row_5     col_4    |      5      1.61 | g5        37 +            48 | #> # ℹ n = 20 #> # ℹ 3 more variables: sample <chr>, condition <chr>, sum <dbl>"},{"path":"https://jtlandis.github.io/plyxp/reference/filter.html","id":null,"dir":"Reference","previous_headings":"","what":"filter PlySummarizedExperiment — filter","title":"filter PlySummarizedExperiment — filter","text":"filter() function used subset object, returning observations satisfy conditions. observation must return TRUE conditions within context retained. Note, guarantee valid PlySummarizedExperiment returned, filtering assays evaluation context disabled.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"filter PlySummarizedExperiment — filter","text":"","code":"# S3 method for class 'PlySummarizedExperiment' filter(.data, ..., .preserve = FALSE)"},{"path":"https://jtlandis.github.io/plyxp/reference/filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"filter PlySummarizedExperiment — filter","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects ... conditions filter . must wrapped cols() rows() .preserve Relevant .data input grouped. .preserve = FALSE (default), grouping structure recalculated based resulting data, .e. number groups may change.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"filter PlySummarizedExperiment — filter","text":"object inheriting PlySummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"filter PlySummarizedExperiment — filter","text":"","code":"# example code filter(   se_simple,   rows(length > 30),   cols(condition == \"drug\") ) #> # A SummarizedExperiment-tibble Abstraction: 3 × 2 #>   .features .samples | counts logcounts | gene  length direction | sample #>   <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #> 1 row_3     col_3    |     15      2.71 | g3        60 +         | s3     #> 2 row_4     col_3    |     10      2.30 | g4        39 -         | s3     #> 3 row_5     col_3    |     12      2.48 | g5        37 +         | s3     #> 4 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> 5 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> 6 row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ 1 more variable: condition <chr>  filter(   se_simple,   rows(rowSums(.assays_asis$counts) > 40),   cols(colSums(.assays_asis$counts) < 50) ) #> # A SummarizedExperiment-tibble Abstraction: 3 × 3 #>   .features .samples | counts logcounts | gene  length direction | sample #>   <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #> 1 row_3     col_2    |      6      1.79 | g3        60 +         | s2     #> 2 row_4     col_2    |     17      2.83 | g4        39 -         | s2     #> 3 row_5     col_2    |     13      2.56 | g5        37 +         | s2     #> 4 row_3     col_3    |     15      2.71 | g3        60 +         | s3     #> 5 row_4     col_3    |     10      2.30 | g4        39 -         | s3     #> 6 row_5     col_3    |     12      2.48 | g5        37 +         | s3     #> 7 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> 8 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> 9 row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ 1 more variable: condition <chr>  # assay context is disabled filter(   se_simple,   counts > 12 ) |> try() #> Error in filter(se_simple, counts > 12) :  #> Caused by error in `filter_se_impl()`: #> ! Cannot filter in `assays` context #> ✖ review expression: ..1 #> ℹ consider wrapping expressions in rows(...) or cols(...)  # convert to `data.frame` first as.data.frame(se_simple) |>   filter(counts > 12) #>   .features .samples counts logcounts gene length direction sample condition #> 1     row_1    col_1     14  2.639057   g1      1         -     s1     cntrl #> 2     row_2    col_1     19  2.944439   g2     24         +     s1     cntrl #> 3     row_3    col_1     16  2.772589   g3     60         +     s1     cntrl #> 4     row_5    col_1     18  2.890372   g5     37         +     s1     cntrl #> 5     row_4    col_2     17  2.833213   g4     39         -     s2     cntrl #> 6     row_5    col_2     13  2.564949   g5     37         +     s2     cntrl #> 7     row_3    col_3     15  2.708050   g3     60         +     s3      drug #> 8     row_3    col_4     20  2.995732   g3     60         +     s4      drug"},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":null,"dir":"Reference","previous_headings":"","what":"apply groups to PlySummarizedExperiment — group_by","title":"apply groups to PlySummarizedExperiment — group_by","text":"create grouping variables rowData colData PlySummarizedExperiment object. Unlike data.frame method resulting output class left unchanged. Thus dplyr generics PlySummarizedExperiment must check grouping information manually.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"apply groups to PlySummarizedExperiment — group_by","text":"","code":"# S3 method for class 'PlySummarizedExperiment' group_by(.data, ..., .add = FALSE)  # S3 method for class 'PlySummarizedExperiment' ungroup(x, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"apply groups to PlySummarizedExperiment — group_by","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects ... contextual expressions specifying columns ungroup. Omitting ... ungroups entire object. .add FALSE, default, group_by() override existing groups. x object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":"s-compatibility","dir":"Reference","previous_headings":"","what":"S4 Compatibility","title":"apply groups to PlySummarizedExperiment — group_by","text":"moment, grouping S4 Vectors yet supported. due plyxp using [vec_group_loc][vctrs::vec_group_loc] form grouping information. plyxp eventually develop method handle S4 Vectors.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"apply groups to PlySummarizedExperiment — group_by","text":"PlySummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"apply groups to PlySummarizedExperiment — group_by","text":"ungroup(PlySummarizedExperiment): Ungroup PlySummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"apply groups to PlySummarizedExperiment — group_by","text":"","code":"group_by(se_simple, rows(direction), cols(condition)) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #> # Groups: rows(direction), cols(condition) #>     .features .samples | counts logcounts | direction gene  length | condition #>     <chr>     <chr>    |  <int>     <dbl> | <chr>     <chr>  <int> | <chr>     #>   1 row_1     col_1    |     14      2.64 | -         g1         1 | cntrl     #>   2 row_2     col_1    |     19      2.94 | +         g2        24 | cntrl     #>   3 row_3     col_1    |     16      2.77 | +         g3        60 | cntrl     #>   4 row_4     col_1    |     11      2.40 | -         g4        39 | cntrl     #>   5 row_5     col_1    |     18      2.89 | +         g5        37 | cntrl     #>   …   …         …             …        …    …          …         …     …       #> n-4 row_1     col_4    |      9      2.20 | -         g1         1 | drug      #> n-3 row_2     col_4    |      4      1.39 | +         g2        24 | drug      #> n-2 row_3     col_4    |     20      3.00 | +         g3        60 | drug      #> n-1 row_4     col_4    |      3      1.10 | -         g4        39 | drug      #> n   row_5     col_4    |      5      1.61 | +         g5        37 | drug      #> # ℹ n = 20 #> # ℹ 1 more variable: sample <chr>"},{"path":"https://jtlandis.github.io/plyxp/reference/group_data.html","id":null,"dir":"Reference","previous_headings":"","what":"get grouping data — group_data","title":"get grouping data — group_data","text":"retrieve grouping information SummarizedExperiment object. stored within metadata() object.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get grouping data — group_data","text":"","code":"# S3 method for class 'PlySummarizedExperiment' group_data(.data)"},{"path":"https://jtlandis.github.io/plyxp/reference/group_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get grouping data — group_data","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get grouping data — group_data","text":"list groupings SummarizedExperiment","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get grouping data — group_data","text":"","code":"group_by(se_simple, rows(direction), cols(condition)) |> group_data() #> $row_groups #> # A tibble: 2 × 3 #>   direction .indices  .indices_group_id #>   <chr>     <list>                <int> #> 1 -         <int [2]>                 1 #> 2 +         <int [3]>                 2 #>  #> $col_groups #> # A tibble: 2 × 3 #>   condition .indices  .indices_group_id #>   <chr>     <list>                <int> #> 1 cntrl     <int [2]>                 1 #> 2 drug      <int [2]>                 2 #>  #> attr(,\"class\") #> [1] \"plyxp_groups\" #> attr(,\"type\") #> [1] \"rowcol\""},{"path":"https://jtlandis.github.io/plyxp/reference/group_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"get PlySummarizedExperiment grouping Variables — group_vars","title":"get PlySummarizedExperiment grouping Variables — group_vars","text":"like dplyr::group_vars() get character strings groupings exection return value list grouped context","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get PlySummarizedExperiment grouping Variables — group_vars","text":"","code":"# S3 method for class 'PlySummarizedExperiment' group_vars(x)"},{"path":"https://jtlandis.github.io/plyxp/reference/group_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get PlySummarizedExperiment grouping Variables — group_vars","text":"x PlySummarizedExperiment","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get PlySummarizedExperiment grouping Variables — group_vars","text":"NULL list containing names grouping columns","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/group_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"get PlySummarizedExperiment grouping Variables — group_vars","text":"","code":"out <- group_by(se_simple, rows(direction)) group_vars(out) #> $row_groups #> [1] \"direction\" #>  #> $col_groups #> character(0) #>"},{"path":"https://jtlandis.github.io/plyxp/reference/mutate.html","id":null,"dir":"Reference","previous_headings":"","what":"Mutate a PlySummarizedExperiment object — mutate","title":"Mutate a PlySummarizedExperiment object — mutate","text":"Mutate PlySummarizedExperiment object data mask. Unlike dplyr implementations, contextual evaluations mutate() SummarizedExperiment valid.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/mutate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mutate a PlySummarizedExperiment object — mutate","text":"","code":"# S3 method for class 'PlySummarizedExperiment' mutate(.data, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/mutate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mutate a PlySummarizedExperiment object — mutate","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects ... expressions evaluate","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/mutate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mutate a PlySummarizedExperiment object — mutate","text":"object inheriting PlySummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/mutate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mutate a PlySummarizedExperiment object — mutate","text":"","code":"mutate(se_simple,   counts_1 = counts + 1,   logp_counts = log(counts_1),   # access assays context with \".assays\" pronoun,   # note that assays are sliced into a list to   # fit dimensions of cols context   cols(sum = purrr::map_dbl(.assays$counts, sum)),   # access assays context \"asis\" with the same pronoun   # but with a \"_asis\" suffix.   rows(sum = rowSums(.assays_asis$counts)) ) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts counts_1 logp_counts | gene  length #>     <chr>     <chr>    |  <int>     <dbl>    <dbl>       <dbl> | <chr>  <int> #>   1 row_1     col_1    |     14      2.64       15        2.71 | g1         1 #>   2 row_2     col_1    |     19      2.94       20        3.00 | g2        24 #>   3 row_3     col_1    |     16      2.77       17        2.83 | g3        60 #>   4 row_4     col_1    |     11      2.40       12        2.48 | g4        39 #>   5 row_5     col_1    |     18      2.89       19        2.94 | g5        37 #>   …   …         …             …        …         …          …     …         … #> n-4 row_1     col_4    |      9      2.20       10        2.30 | g1         1 #> n-3 row_2     col_4    |      4      1.39        5        1.61 | g2        24 #> n-2 row_3     col_4    |     20      3.00       21        3.04 | g3        60 #> n-1 row_4     col_4    |      3      1.10        4        1.39 | g4        39 #> n   row_5     col_4    |      5      1.61        6        1.79 | g5        37 #> # ℹ n = 20 #> # ℹ 6 more variables: direction <chr>, sum <dbl>, `` <>, sample <chr>, #> #   condition <chr>, sum <dbl>"},{"path":"https://jtlandis.github.io/plyxp/reference/new_plyxp.html","id":null,"dir":"Reference","previous_headings":"","what":"SummarizedExperiment Shell Object — new_plyxp","title":"SummarizedExperiment Shell Object — new_plyxp","text":"container object SummarizedExperiment class. S4 class implemented bring unique dplyr syntax SummarizedExperiment object without clashing tidySummarizedExperiment package. , simple wrapper contains one slot, holds SummarizedExperiment object.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/new_plyxp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SummarizedExperiment Shell Object — new_plyxp","text":"","code":"new_plyxp(se)  PlySummarizedExperiment(se)"},{"path":"https://jtlandis.github.io/plyxp/reference/new_plyxp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SummarizedExperiment Shell Object — new_plyxp","text":"se SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/new_plyxp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SummarizedExperiment Shell Object — new_plyxp","text":"PlySummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/new_plyxp.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"SummarizedExperiment Shell Object — new_plyxp","text":"se contains underlying SummarizedExperiment class.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/new_plyxp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SummarizedExperiment Shell Object — new_plyxp","text":"","code":"se <- SummarizedExperiment(   assays = list(counts = matrix(1:6, nrow = 3)),   colData = S4Vectors::DataFrame(condition = c(\"A\", \"B\")) ) new_plyxp(se = se) #> # A SummarizedExperiment-tibble Abstraction: 3 × 2 #>   .features .samples | counts | | condition #>       <int>    <int> |  <int> | | <chr>     #> 1         1        1 |      1 | | A         #> 2         2        1 |      2 | | A         #> 3         3        1 |      3 | | A         #> 4         1        2 |      4 | | B         #> 5         2        2 |      5 | | B         #> 6         3        2 |      6 | | B         # or PlySummarizedExperiment(se = se) #> # A SummarizedExperiment-tibble Abstraction: 3 × 2 #>   .features .samples | counts | | condition #>       <int>    <int> |  <int> | | <chr>     #> 1         1        1 |      1 | | A         #> 2         2        1 |      2 | | A         #> 3         3        1 |      3 | | A         #> 4         1        2 |      4 | | B         #> 5         2        2 |      5 | | B         #> 6         3        2 |      6 | | B"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-context.html","id":null,"dir":"Reference","previous_headings":"","what":"plyxp contexts — plyxp-context","title":"plyxp contexts — plyxp-context","text":"Contextual user-facing helper function dplyr verbs SummarizedExperiment objects. functions intended used top level call dplyr verbs ... argument, similar across()/if_any()/if_all(). Specifies following expressions evaluated within colData context. Specifies following expressions evaluated within rowData context. Specify single expression evaluate another context Specify single expression evaluate another context Specify single expression evaluate another context","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-context.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plyxp contexts — plyxp-context","text":"","code":"cols(...)  rows(...)  col_ctx(x, asis = FALSE)  row_ctx(x, asis = FALSE)  assay_ctx(x, asis = FALSE)"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-context.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plyxp contexts — plyxp-context","text":"x, ... expressions evaluate within associated context asis asis = FALSE (default) indicate using active bindings attempt coerce underlying data format appropriate current context. Indicating TRUE instead bind underlying data .","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-context.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plyxp contexts — plyxp-context","text":"function called side-effects","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-context.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plyxp contexts — plyxp-context","text":"","code":"# cols mutate(se_simple,        cols(is_drug = condition==\"drug\"),        #bind a different context        effect = col_ctx(counts + (is_drug * rbinom(n(), 20, .3)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts effect | gene  length direction | #>     <chr>     <chr>    |  <int>     <dbl>  <int> | <chr>  <int> <chr>     | #>   1 row_1     col_1    |     14      2.64     14 | g1         1 -         | #>   2 row_2     col_1    |     19      2.94     19 | g2        24 +         | #>   3 row_3     col_1    |     16      2.77     16 | g3        60 +         | #>   4 row_4     col_1    |     11      2.40     11 | g4        39 -         | #>   5 row_5     col_1    |     18      2.89     18 | g5        37 +         | #>   …   …         …             …        …       …    …         … …           #> n-4 row_1     col_4    |      9      2.20     13 | g1         1 -         | #> n-3 row_2     col_4    |      4      1.39      9 | g2        24 +         | #> n-2 row_3     col_4    |     20      3.00     23 | g3        60 +         | #> n-1 row_4     col_4    |      3      1.10      8 | g4        39 -         | #> n   row_5     col_4    |      5      1.61     15 | g5        37 +         | #> # ℹ n = 20 #> # ℹ 3 more variables: sample <chr>, condition <chr>, is_drug <lgl>"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-package.html","id":null,"dir":"Reference","previous_headings":"","what":"plyxp: Data masks for SummarizedExperiment enabling dplyr-like manipulation — plyxp-package","title":"plyxp: Data masks for SummarizedExperiment enabling dplyr-like manipulation — plyxp-package","text":"package provides `rlang` data masks SummarizedExperiment class. enables evaluation unquoted expression different contexts SummarizedExperiment object optional access contexts. goal `plyxp` evaluation feel like data.frame object without ever needing unwind rectangular data.frame.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plyxp: Data masks for SummarizedExperiment enabling dplyr-like manipulation — plyxp-package","text":"API using S4 classes rlang data masks","code":""},{"path":[]},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plyxp: Data masks for SummarizedExperiment enabling dplyr-like manipulation — plyxp-package","text":"Maintainer: Justin Landis jtlandis314@gmail.com (ORCID) Authors: Michael Love michaelisaiahlove@gmail.com (ORCID)","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-printing.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing within tibble with S4 objects — vec_phantom","title":"Printing within tibble with S4 objects — vec_phantom","text":"plyxp uses pillar printing. want change S4 object printed within plyxp's print method, consider writing method function. print S4 objects tibble, plyxp hacks custom integer vector built vctrs S4 object lives attribute named \"phantomData\". can create S4 phantom vector vec_phantom(). function used outside printing plyxp default method formatting vec_phantom() call showAsCell().","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-printing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing within tibble with S4 objects — vec_phantom","text":"","code":"vec_phantom(x)  plyxp_pillar_format(x, ...)  show_tidy(x, ...)  use_show_tidy()  use_show_default()"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-printing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing within tibble with S4 objects — vec_phantom","text":"x S4 object ... arguments passed pillar_shaft","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-printing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing within tibble with S4 objects — vec_phantom","text":"plyxp_pillar_format -> formatted version S4 vector vec_phantom -> integer vector arbitrary object phatomData attribute.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-printing.html","id":"tidy-printing","dir":"Reference","previous_headings":"","what":"tidy printing","title":"Printing within tibble with S4 objects — vec_phantom","text":"default, plyxp affect show method SummarizedExperiment objects. PlySummarizedExperiment object always use tibble abstraction method. want use tibble abstraction, may use use_show_tidy() enable use_show_default() #' disable feature. functions called side effects, #' modifying global option \"show_SummarizedExperiment_as_tibble_abstraction\". show object tibble abstraction regardless set option, use S3 generic show_tidy(...).","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp-printing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing within tibble with S4 objects — vec_phantom","text":"","code":"if(require(\"IRanges\")) {   ilist <- IRanges::IntegerList(list(c(1L,2L,3L),c(5L,6L)))   phantom <- vec_phantom(ilist)   pillar::pillar_shaft(phantom)    plyxp_pillar_format.CompressedIntegerList <- function(x) {    sprintf(\"Int: [%i]\", lengths(x))   }   print(pillar::pillar_shaft(phantom))   rm(plyxp_pillar_format.CompressedIntegerList) } #> Loading required package: IRanges #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, aperm, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, table, tapply, #>     union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #> Loading required package: stats4 #>  #> Attaching package: ‘S4Vectors’ #> The following object is masked from ‘package:utils’: #>  #>     findMatches #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> <pillar_ornament> #> 1,2,3 #> 5,6    # default printing for PlySummarizedExperiment object se_simple #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #>   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #>   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     #>   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #>   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #>   …   …         …             …        …     …         … …            …     #> n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #> n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #> n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr> # default printing for SummarizedExperiment object se <- se(se_simple) se #> class: SummarizedExperiment  #> dim: 5 4  #> metadata(0): #> assays(2): counts logcounts #> rownames(5): row_1 row_2 row_3 row_4 row_5 #> rowData names(3): gene length direction #> colnames(4): col_1 col_2 col_3 col_4 #> colData names(2): sample condition # use `plyxp` tibble abstraction use_show_tidy() se #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #>   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #>   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     #>   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #>   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #>   …   …         …             …        …     …         … …            …     #> n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #> n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #> n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr> # restore default print use_show_default() se #> class: SummarizedExperiment  #> dim: 5 4  #> metadata(0): #> assays(2): counts logcounts #> rownames(5): row_1 row_2 row_3 row_4 row_5 #> rowData names(3): gene length direction #> colnames(4): col_1 col_2 col_3 col_4 #> colData names(2): sample condition # explicitly using tibble abstraction show_tidy(se) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #>   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #>   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     #>   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #>   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #>   …   …         …             …        …     …         … …            …     #> n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #> n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #> n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify SummarizedExperiment Object — plyxp","title":"Modify SummarizedExperiment Object — plyxp","text":"Modify underlying SummarizedExperiment object function.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify SummarizedExperiment Object — plyxp","text":"","code":"plyxp(.data, .f, ..., .caller = caller_env())  plyxp_on(.data, .f, ..., .on, .caller = caller_env())"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify SummarizedExperiment Object — plyxp","text":".data PlySummarizedExperiment object .f within plyxp(): function returns SummarizedExperiment object. within plyxp_on(): .f return value compatible .(se)<- ... additional arguments passed .f .caller environment plyxp signal error one occurs. .symbol matching accessor setter function SummarizedExperiment Class.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify SummarizedExperiment Object — plyxp","text":"PlySummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Modify SummarizedExperiment Object — plyxp","text":"plyxp_on(): pass function result accessor SummarizedExperiment Class function wrapper expression: .symbol accessor function SummarizedExperiment Class. Note: setter variant must exist environment plyxp_on() called. arguments diffused quosures evaluated environment quoted.","code":"plyxp::plyxp(.data, function(se, ...) {    .f <- rlang::as_function(.f)    obj <- .on(se)    obj <- .f(se, ...)    .on(se) <- obj    se  }, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/plyxp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify SummarizedExperiment Object — plyxp","text":"","code":"plyxp(se_simple, function(x) x) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #>   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #>   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     #>   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #>   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #>   …   …         …             …        …     …         … …            …     #> n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #> n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #> n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr> plyxp_on(se_simple,         .f = lapply, # function to call on `.on` args,         .on = rowData, # data `.f` will be used on          paste, \"foo\") # arguments for `.f` #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene   length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <chr>  <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1 foo 1 foo  - foo     | s1     #>   2 row_2     col_1    |     19      2.94 | g2 foo 24 foo + foo     | s1     #>   3 row_3     col_1    |     16      2.77 | g3 foo 60 foo + foo     | s1     #>   4 row_4     col_1    |     11      2.40 | g4 foo 39 foo - foo     | s1     #>   5 row_5     col_1    |     18      2.89 | g5 foo 37 foo + foo     | s1     #>   …   …         …             …        …     …  …   …  …  …  …         …     #> n-4 row_1     col_4    |      9      2.20 | g1 foo 1 foo  - foo     | s4     #> n-3 row_2     col_4    |      4      1.39 | g2 foo 24 foo + foo     | s4     #> n-2 row_3     col_4    |     20      3.00 | g3 foo 60 foo + foo     | s4     #> n-1 row_4     col_4    |      3      1.10 | g4 foo 39 foo - foo     | s4     #> n   row_5     col_4    |      5      1.61 | g5 foo 37 foo + foo     | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>"},{"path":"https://jtlandis.github.io/plyxp/reference/pull.html","id":null,"dir":"Reference","previous_headings":"","what":"extract data from object — pull","title":"extract data from object — pull","text":"similar dplyr::pull.data.frame except allows extract objects different contexts.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/pull.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract data from object — pull","text":"","code":"# S3 method for class 'PlySummarizedExperiment' pull(.data, var = -1, name = NULL, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/pull.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract data from object — pull","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects var variable specified dplyr::pull name ignored argument. Due range data types PlySummarizedExperiment argument supported ... unused argument","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/pull.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"extract data from object — pull","text":"element either assays, rowData, colData SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/pull.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"extract data from object — pull","text":"","code":"# last element of default context (assays) pull(se_simple, var = -1) #>          col_1     col_2    col_3    col_4 #> row_1 2.639057 2.0794415 1.945910 2.197225 #> row_2 2.944439 0.6931472 0.000000 1.386294 #> row_3 2.772589 1.7917595 2.708050 2.995732 #> row_4 2.397895 2.8332133 2.302585 1.098612 #> row_5 2.890372 2.5649494 2.484907 1.609438 # first element of rows context pull(se_simple, var = rows(1)) #> [1] \"g1\" \"g2\" \"g3\" \"g4\" \"g5\" # element from col context by literal variable name pull(se_simple, var = cols(condition)) #> [1] \"cntrl\" \"cntrl\" \"drug\"  \"drug\"   # use `pull()` to return contextual info mutate(se_simple, rows(counts = .assays$counts)) |>   # get last stored element   pull(rows(-1)) #> [[1]] #> col_1 col_2 col_3 col_4  #>    14     8     7     9  #>  #> [[2]] #> col_1 col_2 col_3 col_4  #>    19     2     1     4  #>  #> [[3]] #> col_1 col_2 col_3 col_4  #>    16     6    15    20  #>  #> [[4]] #> col_1 col_2 col_3 col_4  #>    11    17    10     3  #>  #> [[5]] #> col_1 col_2 col_3 col_4  #>    18    13    12     5  #>"},{"path":"https://jtlandis.github.io/plyxp/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. S4Vectors metadata, metadata<- SummarizedExperiment SummarizedExperiment, assay, assay<-, assays, assays<-, colData, colData<-, rowData, rowData<-","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/reexports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects exported from other packages — reexports","text":"exported functions available plyxp","code":""},{"path":[]},{"path":"https://jtlandis.github.io/plyxp/reference/reexports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects exported from other packages — reexports","text":"","code":"arrange(se_simple, rows(direction)) |>   mutate(logp_counts = log1p(counts)) |>   filter(cols(condition == \"drug\")) #> # A SummarizedExperiment-tibble Abstraction: 5 × 2 #>    .features .samples | counts logcounts logp_counts | gene  length direction | #>    <chr>     <chr>    |  <int>     <dbl>       <dbl> | <chr>  <int> <chr>     | #>  1 row_2     col_3    |      1      0          0.693 | g2        24 +         | #>  2 row_3     col_3    |     15      2.71       2.77  | g3        60 +         | #>  3 row_5     col_3    |     12      2.48       2.56  | g5        37 +         | #>  4 row_1     col_3    |      7      1.95       2.08  | g1         1 -         | #>  5 row_4     col_3    |     10      2.30       2.40  | g4        39 -         | #>  6 row_2     col_4    |      4      1.39       1.61  | g2        24 +         | #>  7 row_3     col_4    |     20      3.00       3.04  | g3        60 +         | #>  8 row_5     col_4    |      5      1.61       1.79  | g5        37 +         | #>  9 row_1     col_4    |      9      2.20       2.30  | g1         1 -         | #> 10 row_4     col_4    |      3      1.10       1.39  | g4        39 -         | #> # ℹ 2 more variables: sample <chr>, condition <chr>  assays(se_simple) #> List of length 2 #> names(2): counts logcounts rowData(se_simple) #> DataFrame with 5 rows and 3 columns #>              gene    length   direction #>       <character> <integer> <character> #> row_1          g1         1           - #> row_2          g2        24           + #> row_3          g3        60           + #> row_4          g4        39           - #> row_5          g5        37           + colData(se_simple) #> DataFrame with 4 rows and 2 columns #>            sample   condition #>       <character> <character> #> col_1          s1       cntrl #> col_2          s2       cntrl #> col_3          s3        drug #> col_4          s4        drug"},{"path":"https://jtlandis.github.io/plyxp/reference/se_simple.html","id":null,"dir":"Reference","previous_headings":"","what":"Plyxp Simple Example Summarized Experiment — se_simple","title":"Plyxp Simple Example Summarized Experiment — se_simple","text":"small data SummarizedExperiment Object 20 observations, 5 rows 4 columns.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/se_simple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plyxp Simple Example Summarized Experiment — se_simple","text":"","code":"se_simple"},{"path":[]},{"path":"https://jtlandis.github.io/plyxp/reference/se_simple.html","id":"se-simple","dir":"Reference","previous_headings":"","what":"se_simple","title":"Plyxp Simple Example Summarized Experiment — se_simple","text":"assays counts sampled data points 1:20 logcounts log transform counts rowData/.features gene fake gene name length fake gene length direction fake strand colData/.samples sample fake sample name condition control drug treatment","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/se_simple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plyxp Simple Example Summarized Experiment — se_simple","text":"SummarizedExperiment object","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/se_simple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plyxp Simple Example Summarized Experiment — se_simple","text":"","code":"SummarizedExperiment::assays(se_simple) #> List of length 2 #> names(2): counts logcounts SummarizedExperiment::rowData(se_simple) #> DataFrame with 5 rows and 3 columns #>              gene    length   direction #>       <character> <integer> <character> #> row_1          g1         1           - #> row_2          g2        24           + #> row_3          g3        60           + #> row_4          g4        39           - #> row_5          g5        37           + SummarizedExperiment::colData(se_simple) #> DataFrame with 4 rows and 2 columns #>            sample   condition #>       <character> <character> #> col_1          s1       cntrl #> col_2          s2       cntrl #> col_3          s3        drug #> col_4          s4        drug"},{"path":"https://jtlandis.github.io/plyxp/reference/select.html","id":null,"dir":"Reference","previous_headings":"","what":"select assays, rowData, and colData names — select","title":"select assays, rowData, and colData names — select","text":"Select one values context. default omitting expression context selecting NOTHING context. <tidy-select> implementation within plyxp almost similar dplyr except used within across() function. used accross(), data provided eval_select zero length slice data. intentional choice prevent evaluation potentionally expensive chopping operations S4Vectors. means predicate function () able query original data.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"select assays, rowData, and colData names — select","text":"","code":"# S3 method for class 'PlySummarizedExperiment' select(.data, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"select assays, rowData, and colData names — select","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects ... <tidy-select> one selection expressions. Supports wrapping expressions within <plyxp-contexts>.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"select assays, rowData, and colData names — select","text":"object inheriting PlySummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"select assays, rowData, and colData names — select","text":"","code":"# only keep assays, other contexts are dropped select(se_simple, everything()) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | | #>     <chr>     <chr>    |  <int>     <dbl> | | #>   1 row_1     col_1    |     14      2.64 | | #>   2 row_2     col_1    |     19      2.94 | | #>   3 row_3     col_1    |     16      2.77 | | #>   4 row_4     col_1    |     11      2.40 | | #>   5 row_5     col_1    |     18      2.89 | | #>   …   …         …             …        …      #> n-4 row_1     col_4    |      9      2.20 | | #> n-3 row_2     col_4    |      4      1.39 | | #> n-2 row_3     col_4    |     20      3.00 | | #> n-1 row_4     col_4    |      3      1.10 | | #> n   row_5     col_4    |      5      1.61 | | #> # ℹ n = 20  # only keep rowData, other contexts are dropped select(se_simple, rows(everything())) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | | gene  length direction | #>     <chr>     <chr>    | | <chr>  <int> <chr>     | #>   1 row_1     col_1    | | g1         1 -         | #>   2 row_2     col_1    | | g2        24 +         | #>   3 row_3     col_1    | | g3        60 +         | #>   4 row_4     col_1    | | g4        39 -         | #>   5 row_5     col_1    | | g5        37 +         | #>   …   …         …           …         … …           #> n-4 row_1     col_4    | | g1         1 -         | #> n-3 row_2     col_4    | | g2        24 +         | #> n-2 row_3     col_4    | | g3        60 +         | #> n-1 row_4     col_4    | | g4        39 -         | #> n   row_5     col_4    | | g5        37 +         | #> # ℹ n = 20  select(se_simple, rows(where(is.numeric))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | | length | #>     <chr>     <chr>    | |  <int> | #>   1 row_1     col_1    | |      1 | #>   2 row_2     col_1    | |     24 | #>   3 row_3     col_1    | |     60 | #>   4 row_4     col_1    | |     39 | #>   5 row_5     col_1    | |     37 | #>   …   …         …               …   #> n-4 row_1     col_4    | |      1 | #> n-3 row_2     col_4    | |     24 | #> n-2 row_3     col_4    | |     60 | #> n-1 row_4     col_4    | |     39 | #> n   row_5     col_4    | |     37 | #> # ℹ n = 20  # Note on `where()` clause, all data is available within select select(se_simple, rows(where(~any(grepl(\"-\", .x))))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | | direction | #>     <chr>     <chr>    | | <chr>     | #>   1 row_1     col_1    | | -         | #>   2 row_2     col_1    | | +         | #>   3 row_3     col_1    | | +         | #>   4 row_4     col_1    | | -         | #>   5 row_5     col_1    | | +         | #>   …   …         …          …           #> n-4 row_1     col_4    | | -         | #> n-3 row_2     col_4    | | +         | #> n-2 row_3     col_4    | | +         | #> n-1 row_4     col_4    | | -         | #> n   row_5     col_4    | | +         | #> # ℹ n = 20  # within an `across()`, only a zero-length slice avialble, so the # `where()` predicate cannot access the data mutate(se_simple,        rows(         across(where(~any(grepl(\"-\", .x))),                ~sprintf(\"%s foo\", .x)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene  length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>  <int> <chr>     | <chr>  #>   1 row_1     col_1    |     14      2.64 | g1         1 -         | s1     #>   2 row_2     col_1    |     19      2.94 | g2        24 +         | s1     #>   3 row_3     col_1    |     16      2.77 | g3        60 +         | s1     #>   4 row_4     col_1    |     11      2.40 | g4        39 -         | s1     #>   5 row_5     col_1    |     18      2.89 | g5        37 +         | s1     #>   …   …         …             …        …     …         … …            …     #> n-4 row_1     col_4    |      9      2.20 | g1         1 -         | s4     #> n-3 row_2     col_4    |      4      1.39 | g2        24 +         | s4     #> n-2 row_3     col_4    |     20      3.00 | g3        60 +         | s4     #> n-1 row_4     col_4    |      3      1.10 | g4        39 -         | s4     #> n   row_5     col_4    |      5      1.61 | g5        37 +         | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr> # here is an acceptable usage of the `where()` predicate mutate(se_simple,        rows(         across(where(is.character),                ~sprintf(\"%s foo\", .x)))) #> # A SummarizedExperiment-tibble Abstraction: 5 × 4 #>     .features .samples | counts logcounts | gene   length direction | sample #>     <chr>     <chr>    |  <int>     <dbl> | <chr>   <int> <chr>     | <chr>  #>   1 row_1 foo col_1    |     14      2.64 | g1 foo      1 - foo     | s1     #>   2 row_2 foo col_1    |     19      2.94 | g2 foo     24 + foo     | s1     #>   3 row_3 foo col_1    |     16      2.77 | g3 foo     60 + foo     | s1     #>   4 row_4 foo col_1    |     11      2.40 | g4 foo     39 - foo     | s1     #>   5 row_5 foo col_1    |     18      2.89 | g5 foo     37 + foo     | s1     #>   …   …    …    …             …        …     …  …       … …  …         …     #> n-4 row_1 foo col_4    |      9      2.20 | g1 foo      1 - foo     | s4     #> n-3 row_2 foo col_4    |      4      1.39 | g2 foo     24 + foo     | s4     #> n-2 row_3 foo col_4    |     20      3.00 | g3 foo     60 + foo     | s4     #> n-1 row_4 foo col_4    |      3      1.10 | g4 foo     39 - foo     | s4     #> n   row_5 foo col_4    |      5      1.61 | g5 foo     37 + foo     | s4     #> # ℹ n = 20 #> # ℹ 1 more variable: condition <chr>"},{"path":"https://jtlandis.github.io/plyxp/reference/summarize.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize PlySummarizedExperiment — summarize","title":"Summarize PlySummarizedExperiment — summarize","text":"Summarize PlySummarizedExperiment","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/summarize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize PlySummarizedExperiment — summarize","text":"","code":"# S3 method for class 'PlySummarizedExperiment' summarize(.data, ..., .retain = c(\"auto\", \"ungrouped\", \"none\"))  # S3 method for class 'PlySummarizedExperiment' summarise(.data, ..., .retain = c(\"auto\", \"ungrouped\", \"none\"))"},{"path":"https://jtlandis.github.io/plyxp/reference/summarize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize PlySummarizedExperiment — summarize","text":".data object Inheriting PlySummarizedExperiment, wrapper class SummarizedExperiment objects ... expressions summarize object .retain argument controls rowData() colData() retained summarizing. \"auto\" (default), .retain behavior depends groupings .data. exactly one dimension grouped, \"auto\" behaves like \"ungrouped-dim\", \"none\" otherwise. \"ungrouped-dim\", ungrouped dimension's data retained resulting SummarizedExperiment object scalar outputs recycled length ungrouped dimension. \"none\", outputs expected scalar computed values retained rowData() colData()","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/summarize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize PlySummarizedExperiment — summarize","text":"object inheriting PlySummarizedExperiment class","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/summarize.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize PlySummarizedExperiment — summarize","text":"","code":"# outputs in assay context may be either # length 1, or the length of the ungrouped # dimension while .retain = \"auto\"/\"ungrouped-dim\" se_simple |>   group_by(rows(direction)) |>   summarise(     col_sums = colSums(counts),     sample = sample(1:20, 1L)   ) #> # A SummarizedExperiment-tibble Abstraction: 2 × 4 #> # Groups: rows(direction) #>   .features .samples | col_sums sample | direction | sample condition #>       <int> <chr>    |    <dbl>  <int> | <chr>     | <chr>  <chr>     #> 1         1 col_1    |       25     11 | -         | s1     cntrl     #> 2         2 col_1    |       25     11 | +         | s1     cntrl     #> 3         1 col_2    |       17     11 | -         | s2     cntrl     #> 4         2 col_2    |       12     11 | +         | s2     cntrl     #> 5         1 col_3    |       53     11 | -         | s3     drug      #> 6         2 col_3    |       21     11 | +         | s3     drug      #> 7         1 col_4    |       28     11 | -         | s4     drug      #> 8         2 col_4    |       29     11 | +         | s4     drug       # .retain = \"none\" will drop ungrouped dimensions and # outputs of assay context should be length 1. se_simple |>   group_by(rows(direction)) |>   summarise(     col_sums = list(colSums(counts)),     .retain = \"none\"   ) #> # A SummarizedExperiment-tibble Abstraction: 2 × 1 #> # Groups: rows(direction) #>   .features .samples | col_sums  | direction | #>       <int>    <int> | <list>    | <chr>     | #> 1         1        1 | <dbl [4]> | -         | #> 2         2        1 | <dbl [4]> | +         |  # using an `across()` function will help # nest ungrouped dimensions se_simple |>   group_by(rows(direction)) |>   summarise(     col_sums = list(colSums(counts)),     cols(across(everything(), list)),     .retain = \"none\"   ) #> # A SummarizedExperiment-tibble Abstraction: 2 × 1 #> # Groups: rows(direction) #>   .features .samples | col_sums  | direction | sample    condition #>       <int>    <int> | <list>    | <chr>     | <list>    <list>    #> 1         1        1 | <dbl [4]> | -         | <chr [4]> <chr [4]> #> 2         2        1 | <dbl [4]> | +         | <chr [4]> <chr [4]>"},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_recycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Recycle a vector — vctrs-vec_recycle","title":"Recycle a vector — vctrs-vec_recycle","text":"re-export vctrs::vec_recycle S7 generic function allow S4Vectors.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_recycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recycle a vector — vctrs-vec_recycle","text":"","code":"vec_recycle(x, size, ..., x_arg = \"\", call = caller_env())"},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_recycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recycle a vector — vctrs-vec_recycle","text":"x vector recycle. size Desired output size. ... Depending function used: vec_recycle_common(), vectors recycle. vec_recycle(), dots empty. x_arg Argument name x. used error messages inform user argument incompatible size. call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_recycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recycle a vector — vctrs-vec_recycle","text":"S3 S4 vector","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_recycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Recycle a vector — vctrs-vec_recycle","text":"","code":"vec_recycle(1L, size = 5L) #> [1] 1 1 1 1 1 vec_recycle(S4Vectors::Rle(1L), size = 5L) #> integer-Rle of length 5 with 1 run #>   Lengths: 5 #>   Values : 1"},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_rep.html","id":null,"dir":"Reference","previous_headings":"","what":"replicate a vector — vctrs-vec_rep","title":"replicate a vector — vctrs-vec_rep","text":"re-export vctrs::vec_rep vctrs::vec_rep_each S7 generic function allow S4Vectors.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_rep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"replicate a vector — vctrs-vec_rep","text":"","code":"vec_rep(   x,   times,   ...,   error_call = caller_env(),   x_arg = \"x\",   times_arg = \"times\" )  vec_rep_each(   x,   times,   ...,   error_call = caller_env(),   x_arg = \"x\",   times_arg = \"times\" )"},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_rep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"replicate a vector — vctrs-vec_rep","text":"x vector. times vec_rep(), single integer number times repeat entire vector. vec_rep_each(), integer vector number times repeat element x. times recycled size x. ... dots future extensions must empty. error_call execution environment currently running function, e.g. caller_env(). function mentioned error messages source error. See call argument abort() information. x_arg, times_arg Argument names errors.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_rep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"replicate a vector — vctrs-vec_rep","text":"new S3 S4 vector replicated specified times","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs-vec_rep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"replicate a vector — vctrs-vec_rep","text":"","code":"vec_rep(1:2, times = 5) #>  [1] 1 2 1 2 1 2 1 2 1 2 vec_rep(S4Vectors::Rle(1:2), times = 5) #> integer-Rle of length 10 with 10 runs #>   Lengths: 1 1 1 1 1 1 1 1 1 1 #>   Values : 1 2 1 2 1 2 1 2 1 2  vec_rep_each(1:2, times = 5) #>  [1] 1 1 1 1 1 2 2 2 2 2 vec_rep_each(S4Vectors::Rle(1:2), times = 5) #> integer-Rle of length 10 with 2 runs #>   Lengths: 5 5 #>   Values : 1 2"},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":null,"dir":"Reference","previous_headings":"","what":"Get observations of a vector — vctrs_slice","title":"Get observations of a vector — vctrs_slice","text":"extends vctrs::vec_slice S4Vectors::Vector class masking vec_slice S7::new_generic. Atomic vectors base S3 classes (list, data.frame, factor, Dat, POSIXct) dispatch vctrs::vec_slice method normal. Dispatch support S4Vectors::Vector S4Vectors::DataFrame classes provides unified framework working base R vectors S4Vectors.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"s-vectors-vector-implementation","dir":"Reference","previous_headings":"","what":"S4Vectors::Vector Implementation","title":"Get observations of a vector — vctrs_slice","text":"method naively call [ method S4 class inherits S4Vectors::Vector class. may efficient way slice S4 class, work. implementation, x@mcol data expected retained call plyxp::vec_slice(x, ).","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"s-vectors-dataframe-implementation","dir":"Reference","previous_headings":"","what":"S4Vectors::DataFrame Implementation","title":"Get observations of a vector — vctrs_slice","text":"DataFrame implementation works similar vctrs::vec_slice works data.frame object. sliced rows x@listData. maintain size stability DataFrame object, change @nrows appropriate value, perform recursive call @elementMetadata NULL.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"performance","dir":"Reference","previous_headings":"","what":"Performance","title":"Get observations of a vector — vctrs_slice","text":"Depending size complexity S4 Vector object, may find standard subset operation extremely slow. example, consider SummarizedExperiment whose rowData contains CompressedGRangesList object assigned name \"exons\" whose length 250,000 underlying @unlistData length 1,600,000. Performing .features grouping operation attempting evaluate exons within row context force CompressedGRangesList object chopped element-wise. Unfortunately, massive performance hit attempting construct 250,000 GRanges. Unless mind waiting hour dplyr verb exons gets evaluated,  recommended. plyxp package planning export new generic named plyxp_s4_proxy_vec(). attempts reconstruct certain standard S4Vectors::Vectors standard vectors tibbles. equivalent exons object require much memory use, advantage taking several seconds construct. done, can attempt restore original S4 Vector plyxp_restore_s4_proxy(). development, plyxp_s4_proxy_vec() faster work less checks object validity @elementMetadata @metadata dropped objects.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get observations of a vector — vctrs_slice","text":"","code":"vec_slice(x, i, ...)"},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get observations of a vector — vctrs_slice","text":"x vector integer, character logical vector specifying locations names observations get/set. Specify TRUE index elements (x[]), NULL, FALSE integer() index none (x[NULL]). ... dots future extensions must empty.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get observations of a vector — vctrs_slice","text":"new S3 S4 vector subsetted ","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vctrs_slice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get observations of a vector — vctrs_slice","text":"","code":"vec_slice(1:10, i = 5) #> [1] 5 vec_slice(S4Vectors::Rle(rep(1:3, each = 3)), i = 5) #> integer-Rle of length 1 with 1 run #>   Lengths: 1 #>   Values : 2"},{"path":"https://jtlandis.github.io/plyxp/reference/vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"S7 classes for vctrs and S4 Vectors — vectors","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"set S7 classes Class unions help establish S7 method dispatch. classes made re-export several vctrs functions internals plyxp consistent room optimization.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"","code":"class_vctrs  class_s4_vctrs  class_DF"},{"path":"https://jtlandis.github.io/plyxp/reference/vectors.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"object class S7_union length 1. object class classRepresentation length 1. object class classRepresentation length 1.","code":""},{"path":"https://jtlandis.github.io/plyxp/reference/vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"S7 classes for vctrs and S4 Vectors — vectors","text":"S7 class union base class","code":""},{"path":[]}]
